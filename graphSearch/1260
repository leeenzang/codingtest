from collections import deque
import sys
input = sys.stdin.readline

n, m, v = map(int, input().split())

gr = [[] for _ in range(n+1)]
chk = [False] * (n+1) 
chk2 = [False] * (n+1) 

for _ in range(m):
    a, b = map(int, input().split())
    gr[a].append(b)
    gr[b].append(a)

for i in range(1, n+1):
    gr[i].sort()
    
results = []
results2 = []

def bfs(v):
    q = deque()
    q.append(v)
    results.append(v)
    chk[v] = True
    
    while q:
        ev = q.popleft()
        
        for k in gr[ev]:
            if chk[k] == False:
                chk[k] = True
                results.append(k)
                q.append(k)
        
def dfs(v):
    results2.append(v)
    chk2[v] = True
    
    for k in gr[v]:
        if chk2[k] == False:
            dfs(k)
    

bfs(v)
dfs(v)

print(*results2)
print(*results)
