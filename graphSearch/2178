from collections import deque
import sys 
input = sys.stdin.readline

n, m = map(int, input().split())
maps = [list(map(int, input().strip())) for _ in range(n)]
chk = [[False]*m for _ in range(n)]
distance = [[0] * m for _ in range(n)]

dy = [0, 1, 0, -1]
dx = [1, 0, -1, 0]

def bfs(y, x):
    q = deque()
    q.append((y, x))
    chk[y][x] = True
    distance[y][x] = 1
    
    while q:
        ey, ex = q.popleft()
        
        for k in range(4):
            ny = ey+dy[k]
            nx = ex+dx[k]
            if 0<=ny<n and 0<=nx<m:
                if maps[ny][nx] == 1 and chk[ny][nx] == False:
                    chk[ny][nx] = True
                    distance[ny][nx] = distance[ey][ex] + 1
                    q.append((ny,nx))
    return distance[n-1][m-1]
    
        
print(bfs(0,0))
